<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-butterfly-blog</title>
      <link href="/2024/11/27/hexo-butterfly-blog/"/>
      <url>/2024/11/27/hexo-butterfly-blog/</url>
      
        <content type="html"><![CDATA[<p><code>Hexo</code> 是一个快速、简洁且高效的博客框架，基于 <code>Node.js</code> 开发，支持 <code>Markdown</code> 编写文章，支持主题和插件扩展，可以快速搭建一个博客网站。<code>Hexo</code> 的社区活跃，不仅有很多优秀的主题和插件可供选择，而且可以在此基础上满足更多的个性化需求</p><p><code>Butterfly</code> 是一个简介、优雅的主题，支持多种配置、插件和功能，适合个人站点使用。</p><p><code>hexo-theme-butterfly</code> 是基于 <code>hexo-theme-melody</code> 的基础上进行开发的主题。</p><h2 id="Hexo-安装（一）"><a href="#Hexo-安装（一）" class="headerlink" title="Hexo 安装（一）"></a>Hexo 安装（一）</h2><h3 id="安装-Hexo-及-Butterfly-主题"><a href="#安装-Hexo-及-Butterfly-主题" class="headerlink" title="安装 Hexo 及 Butterfly 主题"></a>安装 Hexo 及 Butterfly 主题</h3><p>全局安装 Hexo</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br><span class="line">hexo <span class="literal">-v</span> <span class="comment"># 查看 hexo 版本号</span></span><br></pre></td></tr></table></figure><p>初始化个人博客，此操作后你的个人博客将成为你的默认博客目录，之后所有 <code>hexo</code> 命令都默认在该目录执行。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog<span class="literal">-hexo</span></span><br><span class="line"><span class="built_in">cd</span> blog<span class="literal">-hexo</span></span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>博客内容：</p><ul><li><code>source</code>：页面与文章目录，内部的 <code>_posts</code> 用于存放文章，可以看到里面已经有了一个 <code>hello-world.md</code>。</li><li><code>themes</code>：主题目录</li><li><code>public</code>：静态网页文件目录</li><li><code>_config.yml</code>：博客信息配置文件</li></ul><p>在 Hexo 项目中安装 <code>Butterfly</code> 主题，在项目根目录执行下面命令会将 <code>Butterfly</code> 主题下载到 <code>themes/butterfly</code> 目录下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><p>修改 Hexo 项目的 <code>_config.yml</code> 文件，将 <code>theme</code> 配置项修改为 <code>butterfly</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>如果没有 <code>pug</code> 以及 <code>stylus</code> 的渲染器，需要安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer-pug</span> hexo<span class="literal">-renderer-stylus</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>后续升级建议：为了减少升级主题带来的不便，建议将主题配置文件 <code>themes/butterfly/_config.yml</code> 复制一份到 hexo 的根目录并重命名为 <code>_config.butterfly.yml</code>，之后所有的主题相关配置都在 <code>_config.butterfly.yml</code> 中修改即可</p><blockquote><p>注意：</p><p>复制的是主题的 <code>_config.yml</code>，而不是 hexo 的 <code>_config.yml</code></p><p>不要把主题目录的 <code>_config.yml</code> 删掉</p><p><code>Hexo</code> 会自动合并主题中的 <code>_config.yml</code> 文件和根目录下的 <code>_config.butterfly.yml</code> 主题配置内容，且 <code>_config.butterfly.yml</code> 主题文件配置优先级更高</p></blockquote><h2 id="Hexo-部署（二）"><a href="#Hexo-部署（二）" class="headerlink" title="Hexo 部署（二）"></a>Hexo 部署（二）</h2><h3 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h3><ul><li>生成静态网页到 <code>public</code> 目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate &amp; hexo g</span><br></pre></td></tr></table></figure><ul><li>启动本地预览服务器（实时更新）（https 不可用）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server &amp; hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000/</a>，即可查看 <code>Hexo</code> 博客网站。</p><ul><li>部署服务器到远端</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy &amp; hexo d</span><br></pre></td></tr></table></figure><ul><li>新建文章到 <code>source/_posts</code> 目录（可以手动新建，但注意 Markdown 头部声明）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &#123;文章名称&#125;</span><br></pre></td></tr></table></figure><ul><li>新建页面到 <code>source</code> 目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &#123;页面名称&#125;</span><br></pre></td></tr></table></figure><ul><li>清除 <code>hexo</code> 博客目录缓存与 <code>public</code> 目录，用于修复未知问题</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="built_in">clear</span> &amp; hexo c</span><br></pre></td></tr></table></figure><h3 id="配置博客信息"><a href="#配置博客信息" class="headerlink" title="配置博客信息"></a>配置博客信息</h3><p>前面讲到 <code>_config.yml</code> 文件用于配置博客信息，这里我们打开 <code>_config.yml</code>，仅对于我们关心的内容进行讲解，详细内容见官方文档 <a href="https://hexo.io/zh-cn/docs/configuration.html">_config.yml</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo                                        # 博客标题: Jamhus Tao&#x27;s Blog</span><br><span class="line">subtitle: &#x27;&#x27;                                    # 博客副标题，可缺省</span><br><span class="line">description: &#x27;&#x27;                                    # 博客描述，显示在作者下方</span><br><span class="line">keywords:                                        # 关键词</span><br><span class="line">author: John Doe                                # 作者: Jamhus Tao</span><br><span class="line">language: en                                    # 语言: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;                                    # 时区: &#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure><h3 id="创建-Github-仓库"><a href="#创建-Github-仓库" class="headerlink" title="创建 Github 仓库"></a>创建 Github 仓库</h3><p>配置 <code>Hexo</code> 的方式其实有两种，一种是使用个人服务器，另一种是使用 <code>Github</code> 提供的免费服务，这里主要介绍后者的部署过程。</p><ul><li>首先新建一个名为 <code>&#123;用户名&#125;.github.io</code> 的仓库</li><li>配置 <code>git</code> 工具与 <code>github</code> 建立可信任连接</li></ul><h4 id="配置自定义域名（可选）"><a href="#配置自定义域名（可选）" class="headerlink" title="配置自定义域名（可选）"></a>配置自定义域名（可选）</h4><ul><li>如果觉得 <code>xxx.github.io</code> 太 low 了，可以花钱购买自定义域名，购买域名可以到 <code>阿里云</code> 等平台，一般的域名大概每年几十元。</li><li>打开平台的域名解析界面，添加 <code>CNAME</code> 记录，全部指向你的 <code>xxx.github.io</code>。</li><li>打开 <code>github</code> 仓库，将 <code>Setting-Pages-Custom domain</code> 设置为你购买的域名。</li><li>在本地博客目录下的 <code>source</code> 目录创建 <code>CNAME</code> 文件（没有后缀名），使用记事本打开，写入你购买的域名。</li></ul><h4 id="部署个人站点"><a href="#部署个人站点" class="headerlink" title="部署个人站点"></a>部署个人站点</h4><p>在 <code>hexo</code> 的 <code>_config.yml</code> 找到 <code>URL</code> 和 <code>Deployment</code> 配置。在 <code>url</code> 写上个人站点，如果配置了自定义域名则写上购买的域名，不然写上 <code>xxx.github.io</code>。在 <code>deploy.type</code> 写上 <code>git</code>，后面还得加上 <code>repository</code> 和 <code>branch</code> 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://&#123;username&#125;.github.io</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span>                                                       <span class="comment"># 部署方式: sftp / git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/&#123;username&#125;/&#123;username&#125;.github.io</span>    <span class="comment"># 仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span>                                                  <span class="comment"># 仓库分支</span></span><br></pre></td></tr></table></figure><blockquote><p>注：SFTP 用于推送至个人服务器</p></blockquote><h4 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h4><p>第一次需要安装 <code>git</code> 部署方式依赖</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-deployer-git</span> <span class="literal">--save</span>  <span class="comment"># 首先安装 git 部署方式依赖</span></span><br></pre></td></tr></table></figure><p>再执行部署</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每次最好运行这三个</span></span><br><span class="line"><span class="comment"># 清空缓存与静态文件；重新生成静态文件；开始部署站点</span></span><br><span class="line">hexo c &amp; hexo g &amp; hexo d</span><br></pre></td></tr></table></figure><p>现在使用浏览器打开 <code>&#123;username&#125;.github.io</code>，可以看到和本地运行时相同的界面。</p><blockquote><p>注：将站点部署到 Github 后不会立即生效属于正常现象，Github 需要将代码仓库中的文件部署到自己的服务器上</p></blockquote><blockquote><p>之后每次部署站点，都需要用到这些命令。不同的是，如果修改了网站配置，最好运行 <code>hexo clean</code> 命令；日常上传文章不需要运行该命令</p></blockquote><h2 id="Hexo-主题（三）"><a href="#Hexo-主题（三）" class="headerlink" title="Hexo 主题（三）"></a>Hexo 主题（三）</h2><p>这里，我们介绍Butterfly 主题。本文介绍一些简单的配置，更多的配置可以跟着官方配置的方法。许多你需要解决的问题都可以在官网找到解决方案。</p><p><a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><h3 id="CDN-内容源"><a href="#CDN-内容源" class="headerlink" title="CDN 内容源"></a>CDN 内容源</h3><p>为 <code>Butterfly</code> 提供图标源的 <code>jsdelivr</code> 在国内寄了，因此需要将 <code>CDN</code> 改为本地并按提示安装 <code>hexo-butterfly-extjs</code></p><ul><li>全文搜索 <code>CND</code> 快速定位</li><li><code>CDN.third_part_probider = jsdelivr</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CDN</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work</span></span><br><span class="line"><span class="comment"># 非必要請不要修改</span></span><br><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="comment"># The CDN provider of internal scripts (主題內部 js 的 cdn 配置)</span></span><br><span class="line">  <span class="comment"># option: local/jsdelivr/unpkg/cdnjs/custom</span></span><br><span class="line">  <span class="comment"># Dev version can only choose. ( dev版的主題只能設置為 local )</span></span><br><span class="line">  <span class="attr">internal_provider:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The CDN provider of third party scripts (第三方 js 的 cdn 配置)</span></span><br><span class="line">  <span class="comment"># option: local/jsdelivr/unpkg/cdnjs/custom</span></span><br><span class="line">  <span class="comment"># when set it to local, you need to install hexo-butterfly-extjs</span></span><br><span class="line">  <span class="attr">third_party_provider:</span> <span class="string">jsdelivr</span>                                        <span class="comment"># 改为 local</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-butterfly-extjs</span>  <span class="comment"># 安装 hexo-butterfly-extjs</span></span><br></pre></td></tr></table></figure><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.butterfly.yml</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">目录</span> <span class="string">||</span> <span class="attr">fas fa-list:</span></span><br><span class="line">    <span class="string">归档:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">    <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">    <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">娱乐</span> <span class="string">||</span> <span class="attr">fa fa-heartbeat:</span></span><br><span class="line">    <span class="string">音乐:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="string">图库:</span> <span class="string">/gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-images</span></span><br><span class="line">    <span class="string">电影:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">工具:</span> <span class="string">/tools/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-screwdriver-wrench</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><code>/xxx/</code> 为菜单链接格式，<code>xxx</code> 为页面路径（项目 <code>source</code> 目录下的文件夹名称）</li><li><code>fas fa-home</code> 为 <a href="https://fontawesome.com/">Font Awesome</a> 图标，可以根据自己的需求更换图标</li><li><code>||</code> 为菜单链接和图标分隔符</li></ul><h4 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h4><ul><li><p><code>source</code> 中的每一个目录就是一个页面，<code>_prots</code>、<code>_draft</code> 除外</p></li><li><p>目录包含的页面</p><blockquote><p>需要本地填写</p></blockquote></li><li><p><code>内建页面</code>不需要在本地创建任何目录，它由 <code>Butterfly</code> 自动生成；</p></li><li><p><code>普通页面</code> 直接使用 <code>hexo new page</code> 新建即可，普通页面的名称、内容不受约束；</p></li><li><p><code>关联页面</code> 则需要使用 <code>hexo new page</code> 新建，必须是 <code>Butterfly</code> 支持的页面，需要添加头部 <code>YAML</code>，文章不可包含内容</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p><code>tags/index.md</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-02-05 18:29:52</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line"><span class="section">layout: &quot;tags&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h3 id="Search-搜索"><a href="#Search-搜索" class="headerlink" title="Search 搜索"></a>Search 搜索</h3><p>安装 <code>hexo-generator-search</code> 用于本地搜索</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-generator-search</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>全文搜索 <code># search</code> 快速定位，设置 <code>local_search.enable = true</code>，该配置需要 <code>hexo clean</code></p><h3 id="Image-图片"><a href="#Image-图片" class="headerlink" title="Image 图片"></a>Image 图片</h3><p>这个在<a href="https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%AD%E5%83%8F">Butterfly 文档（三）主题配置</a>有详细介绍</p><p>这里选一部分介绍</p><ul><li>静止彩带背景</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># canvas_ribbon (靜止彩帶背景)</span></span><br><span class="line"><span class="comment"># See: https://github.com/hustcc/ribbon.js</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">click_to_change:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>默认暗黑主题</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Default display mode (網站默認的顯示模式)</span></span><br><span class="line"><span class="comment"># light (default) / dark</span></span><br><span class="line"><span class="attr">display_mode:</span> <span class="string">dark</span></span><br></pre></td></tr></table></figure><ul><li>首页循环打字</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># the subtitle on homepage (主頁subtitle)</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Customize typed.js (配置typed.js)</span></span><br><span class="line">  <span class="comment"># https://github.com/mattboldt/typed.js/#customization</span></span><br><span class="line">  <span class="attr">typed_option:</span> <span class="string">loop</span></span><br><span class="line">  <span class="comment"># source 調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 2  調用一句網（簡體） https://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">找点好玩的去~</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">搞点好吃的去~</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">遇事不决，埋头就睡。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Hey!</span> <span class="string">你在看什么？</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AIOps 简介</title>
      <link href="/2024/11/02/aiops/"/>
      <url>/2024/11/02/aiops/</url>
      
        <content type="html"><![CDATA[<p>AIOps（Artificial Intelligence for IT Operations， 智能运维）是指利用人工智能技术，精准地管控和分析 IT 系统中的海量运维数据，并通过自动化、智能化的方式来优化运维流程，提高运维效率和运维质量。</p><p>AIOps 的特点是利用机器学习、深度学习等 AI 技术，对运维类数据进行分析和处理，从而对运维目标进行健康度评估、智能定位和异常分析，甚至发现潜在问题，提升目标系统的可用性和稳定性。</p><p>AIOps 将会成为 IT 运维的重要发展方向，帮助企业更加高效、智能地实现<strong>数字化转型</strong>。</p><h3 id="为什么要使用-AIOps"><a href="#为什么要使用-AIOps" class="headerlink" title="为什么要使用 AIOps"></a>为什么要使用 AIOps</h3><p>IT 系统先后经历了人工运维和自动化运维阶段，正向智能运维方向演进。在人工运维阶段，主要依赖运维专家的工作经验来进行故障分析、定位和排障，整体运维效率不高，且需要长时间的积累。在自动化运维阶段，运维团队使用脚本、工具等方式执行运维任务，运维效率有了显著提升，但运维团队需要掌握自动化运维工具的开发和迭代，学习难度高。</p><p>随着当今社会信息化程度越来越高，人们的生活方式、社会组织形式、企业商业模式等都在不断发生变革。在这之后，IT 系统复杂度和规模不断增长，各种新技术和新架构层出不穷，各类数据呈爆炸式增长。这些极大挑战现有的 IT 运维能力。面对海量数据、不停变化的系统状态、繁多的业务应用和不同的配置参数，运维工程师的精力有限，人工运维和自动化运维的手段和理念已经无法满足当今大规模 IT 系统的运维诉求。</p><p>为此，Gartner 于 2016 年提出了 AIOps（智能运维）的概念。AIOps 平台通过大数据、机器学习、人工智能等技术，自动地学习和分析海量运维数据（包含历史数据、日志数据、业务数据、系统数据等），给出运维决策建议，可增强和部分取代现有的运维流程和操作。AIOps 可以满足大规模 IT 系统的运维诉求。</p><h3 id="AIOps-使用案例："><a href="#AIOps-使用案例：" class="headerlink" title="AIOps 使用案例："></a>AIOps 使用案例：</h3><ul><li><p>应用程序性能监控：使用传统方法从现代场景中收集指标具有挑战性，例如微服务、API 和数据存储等组件之间的数据交换。取而代之的是，软件团队使用人工智能进行应用程序性能监控，以大规模收集和编译相关指标。</p></li><li><p>根因分析：人工智能技术能够快速处理大数据，在多个可能的原因之间建立关联，有效帮助人员确定事件的根本原因。可以有效调查影响系统性能的真正原因</p></li><li><p>异常检测：异常是偏离监控数据标准分布的异常值，通常指示影响系统运行的异常行为。AIOps 提供实时评估和预测功能，可快速检测数据偏差，并加快执行纠错措施。IT 团队可以设置基于规则的策略以自动执行补救措施</p></li><li><p>云自动化和优化：AIOps 解决方案通过提供工作负载的透明度、可观测性和自动化来支持云转型。在管理相互依赖关系时，部署和管理云应用程序需要更大的灵活性和敏捷性。组织使用 AIOps 解决方案按需配置和扩展计算资源。例如，使用 AIOps 监控工具来计算云使用量并增加容量以支持流量增长</p></li><li><p>应用程序开发支持：DevOps 团队使用 AIOps 工具来提高代码质量。他们可以自动进行代码审查，应用编程最佳实践，以及在开发阶段的早期检测错误。AIOps 工具不是在开发周期接近结束时执行代码质量检查，而是尽量提前检查。</p></li></ul><h3 id="AIOps-和其它术语之间的区别："><a href="#AIOps-和其它术语之间的区别：" class="headerlink" title="AIOps 和其它术语之间的区别："></a>AIOps 和其它术语之间的区别：</h3><p>AIOps 是相对较新的概念，它促使机器学习和大数据处理来改善 IT 运营，以下是 AIOps 与几个相关术语的比较：</p><ul><li>AIOps 与 DevOps<ul><li>DevOps 是一种软件实践，弥合了开发和支持工作流程之间的差距。DevOps 通过在软件和运营团队之间共享信息，帮助组织应用更改并快速解决用户问题。</li><li>AIOps 是一种使用人工智能技术来支持现有 IT 流程的方法；DevOps 团队使用 AIOps 工具来持续评估编码质量并缩短软件交付时间</li></ul></li><li>AIOps 与 MLOps<ul><li>MLOps 框架可以帮助软件团队将机器学习模型集成到数字产品中。该框架涉及模型选型和数据准备。它包括在生产环境中训练、评估和部署机器学习应用程序的过程。</li><li>AIOps 会应用机器学习解决方案来生成可行的见解并提高新 IT 系统和现有 IT 系统的流程效率。</li></ul></li><li>AIOps 与 SRE<ul><li>SRE 是一种工程团队可用于自动化系统操作和使用软件工具执行检查的方法。SRE 团队不依赖手动方法，而是通过自动检测和解决问题来改善软件可靠性和客户体验</li><li>AIOps 与 SRE 有着重叠的目标。AIOps 使用业务运营的海量数据和基于机器学习的预测性见解来帮助站点可靠性工程师缩短事件解决时间</li></ul></li><li>AIOps 与 DataOps<ul><li>借助 DataOps 计划，组织可优化商业智能应用程序的数据使用情况。DataOps 涉及设置数据管道，数据工程师可以使用这些管道从不同域提取、转换和传输数据，以此支持业务运营</li><li>与此同时，AIOps 是一种更为复杂的实践。AIOps 使用 DataOps 提供的信息来检测、分析和解决事件</li></ul></li></ul><h3 id="华为在数据通信领域中的-AIOps-平台和方案"><a href="#华为在数据通信领域中的-AIOps-平台和方案" class="headerlink" title="华为在数据通信领域中的 AIOps 平台和方案"></a>华为在数据通信领域中的 AIOps 平台和方案</h3><p>iMaster NCE 系列产品，全面覆盖各类网络的“规划、建设、维护、优化”的全生命周期，AIOps 智能运维是其中重要的一环。</p><p>以华为数据中心网络为例，在智能运维阶段实现的能力包括但不限于：</p><ul><li>变更及扩容阶段：业务变更意图识别、自动推荐变更方案、变更下发前仿真评估、变更下发后可按需回滚、自动生成验收报告。</li><li>监控阶段：基于业务视图自动创建监控任务，持续监控。</li><li>排障阶段：实时识别异常，1 分钟发现问题、自动分析故障根因、推荐最佳修复方案、预测软硬件故障。</li><li>调参优化阶段：根据流量模型，自动调整设备内部队列，实现 0 丢包；建立业务质量的动态基线，可提前预测业务的劣化。</li></ul><p>下图所示的 iMaster NCE 数据中心自动驾驶网络管理控制系统，是集管理、控制和分析于一体的自动化与智能化平台，是数据中心自动驾驶网络的大脑，以意图引擎、自动化引擎、分析引擎、智能引擎及网络数字孪生底座实现数据中心网络全生命周期高度自动化和智能运维。</p><p><img src="https://gitee.com/Li-zhongliang-q/pic-hexo-blog/raw/master/img/image-20240730141052688.png"></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://info.support.huawei.com/info-finder/encyclopedia/zh/AIOps.html">https://info.support.huawei.com/info-finder/encyclopedia/zh/AIOps.html</a><br><a href="https://aws.amazon.com/cn/what-is/aiops/">https://aws.amazon.com/cn/what-is/aiops/</a></p>]]></content>
      
      
      <categories>
          
          <category> survey </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Pages 数学公式显示</title>
      <link href="/2024/11/02/github-pages-mathtype/"/>
      <url>/2024/11/02/github-pages-mathtype/</url>
      
        <content type="html"><![CDATA[<p>使用 Github Pages 发布博文时，数学公式不能正常显示，有一种方法可以解决，具体的是，添加以下代码到 markdown 文件的开头，这样发布的博文就可以正常显示了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/x-mathjax-config&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">MathJax</span>.<span class="property">Hub</span>.<span class="title class_">Config</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">tex2jax</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">skipTags</span>: [<span class="string">&#x27;script&#x27;</span>, <span class="string">&#x27;noscript&#x27;</span>, <span class="string">&#x27;style&#x27;</span>, <span class="string">&#x27;textarea&#x27;</span>, <span class="string">&#x27;pre&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">inlineMath</span>: [[<span class="string">&#x27;$&#x27;</span>,<span class="string">&#x27;$&#x27;</span>]]</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> fragments </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
